<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('partials/head') %>
    <title>Top Tunes</title>
    <link rel="stylesheet" href="top.css">
</head>
<body>
    <div class="container"> 
        <%- include('partials/nav') %>
        <div class="cards-cover">
        <ul class="tune-list">
            <% posts.forEach((post, index) => { %>
                <a class="tune-link" href="../tune/<%=post._id%>">
                    <li class="tune-list-item">
                        <div class="tune-list-title"><%= index+1 + '. ' %> <%= post.title %></div>
                        <div class="list-funciton-box">
                            <audio class="audio" src="<%='audio/'+post.filename%>"></audio>
                            <ion-icon class="icon pause" name="play-outline" size="large"></ion-icon>
                            <div class="upvote-box">
                                <ion-icon class="tune-list-icon"  name="thumbs-up-outline" data-id="<%= post._id%>" size="large"></ion-icon>
                                <div id="<%= post._id%>" class="upvote-count"> <%= post.upvotes %> </div>
                            </div>
                        </div>
                    </li>
                </a>
            <% }) %>
        </ul>
         </div>


            
            
        <script src="front.js"></script>
        <script>
            const list_icon = document.querySelectorAll('.icon');
            const list_audio = document.querySelectorAll('.audio');
            const upvote_icons = document.querySelectorAll('.tune-list-icon');

            let counter = 0;

            list_icon.forEach((icon, index) => {
                icon.addEventListener('click', (event) => {
                    event.preventDefault();
                    if(icon.classList.contains("pause")) {
                        icon.classList.remove("pause");
                        icon.setAttribute('name', 'pause-outline');
                        icon.classList.add("play");
                        list_audio[index].play();
                    } else {
                        icon.classList.remove("play");
                        icon.setAttribute('name', 'play-outline');
                        icon.classList.add("pause");
                        list_audio[index].pause();
                    }
                });
                upvote_icons[index].addEventListener('click', (evt) => {
                    evt.preventDefault();
                    //
                     console.log(upvote_icons[index].id);
                    const postToUpvote = upvote_icons[index].getAttribute("data-id");
                    console.log(postToUpvote)
                    upvote(postToUpvote);
                })
            });



            const upvote = ((postId) => {
                console.log("sending upvote to " + postId)
                fetch(`/api/v1/posts/upvote`, {
                    method: "PUT",
                    headers: {
                    
                    "postId": postId
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                    const upvotes = data.upvotes;
                    const upvoteEl = document.getElementById(postId);
                    upvoteEl.textContent = `${upvotes}`;
                    })
                    .catch(error => console.error(error));
                });
        </script>
    </div>
</body>
</html>

    
